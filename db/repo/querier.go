// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repo

import (
	"context"
)

type Querier interface {
	CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error)
	// -- name: CreateMessage :one
	// INSERT INTO message (thread, sender, content)
	// VALUES ($1, $2, $3)
	// RETURNING *;
	// -- name: GetMessageByID :one
	// SELECT * FROM message
	// WHERE id = $1;
	// -- name: GetMessagesByThread :many
	// SELECT * FROM message
	// WHERE thread = $1
	// ORDER BY created_at DESC;
	// -- name: DeleteMessage :exec
	// DELETE FROM message WHERE id = $1;
	// -- name: UpdateMessage :exec
	// UPDATE message
	// SET content = $2
	// WHERE id = $1
	// RETURNING *;
	// -- name: CreateThread :one
	// INSERT INTO thread (title)
	// VALUES ($1)
	// RETURNING *;
	// -- name: DeleteAll :exec
	// DELETE FROM message;
	CreateThread(ctx context.Context, title string) (Thread, error)
	DeleteMessageById(ctx context.Context, id string) (string, error)
	DeleteMessageByThreadId(ctx context.Context, threadID int32) (int32, error)
	GetMessageByID(ctx context.Context, id string) (Message, error)
	GetMessagesByThread(ctx context.Context, threadID int32) ([]Message, error)
	GetThreadById(ctx context.Context, id int32) (Thread, error)
	UpdateMessage(ctx context.Context, arg UpdateMessageParams) error
}

var _ Querier = (*Queries)(nil)
